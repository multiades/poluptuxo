/* Stylesheet for the header and the footer */

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;	
}

html, 
body {
  width: 100%; /* More consistent than viewport units */
  height: 100%;
}
  
body {
  font-family: "Roboto", Sans-serif;
  font-size: medium;
}
  
a,
label[for],
button {
  cursor: pointer; /* No need to us :hover, it is evident */
}
  	    
a {
  font-style: normal;
  text-decoration: none;  
} 

header {
  width: 100%;
  height: 100%;
  background: url('../../assets/images/hero.jpg') center / cover no-repeat;
  display: flex;
  justify-content: flex-start;
  align-items: flex-end;
}

div#navHeader {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1; /* Stack on top of subsequent elements that create a stacking context at the base z-index 0 */
  width: 100%; 
  height: 64px;
  background-color: #333;
  /* Transition on GPU-accelerated clip-path instead of CPU-intensive height that causes document reflow */
  transition: clip-path 800ms ease-in-out;
  transition-delay: 200ms; 
  clip-path: polygon(
    0 0,
    110px 0,
    110px 54px,
    88px 64px,
    0 100%,
    0 0
  ); 
  display: grid;
  grid-template-rows: 8px 1fr;
  grid-template-columns: 8px 48px 16px 1fr;

  &>img.logo {
    width: 48px;
    height: 48px;
    grid-area: 2 / 2;
    transform: translateZ(0); /* Create a stacking context */
    transition-property: opacity;
    transition-timing-function: ease-in-out;

    &.logoLower {
      z-index: 0;
    }

    &.logoMiddle {
      z-index: 1;
      transition-duration: 200ms;
      transition-delay: 0s;
      opacity: 1;
    }

    &.logoUpper {
      z-index: 2;
      transition-duration: 200ms;
      transition-delay: 800ms;
      opacity: 1;
    }
  }

  &>img.brand {
    width: auto;
    height: 40px;
    grid-area: 2 / 4;
    /* Using the closing delay of the topBarHeader as the duration */
    transition: opacity 200ms ease-in-out;
    transition-delay: 0s;
    opacity: 0;
  }
}

label[for="navToggler"] {
  /* Custom CSS properties */
  --line-height: 6px;
  --primary-color: white;
  --secondary-color: red;

  position: fixed;
  top: 17px;
  left: 72px;
  width:  calc(var(--line-height) * 5); /* Multiplying with a unitless number */
  height: calc(var(--line-height) * 5);
  display: grid;
  grid-template-columns: repeat(2 , 1fr);
  grid-template-rows: repeat(3, 2fr);
  row-gap: var(--line-height);
  transition: transform 800ms ease-in-out;
  transition-delay: 200ms; /* Waiting for dissapearing content to fade out */
  z-index: 1;

  &>span {
    height: var(--line-height);
    transition: all 600ms ease-in-out; /* The animation is suffering if only transform, opacity and bg-color are listed */
    background-color: var(--primary-color);

    /* Line halves 1, 3, 5 */
    &:nth-child(odd) {
      border-radius: 16px 0 0 16px; /* Rounded border only on the left side */
    }

    /* Lines 2, 4, 6 */
    &:nth-child(even) {
      border-radius: 0 16px 16px 0; /* Rounded border only on the right side */
    }
  }
}

nav#navbar {
  position: fixed;
  top: 64px;
  left: 0;
  width: 100vw; 
  height: calc(100dvh - 64px);
  padding-top: 32px; /* For focus rings and styling */
  background-color: #333;
  transition: clip-path 800ms ease-in-out;
  transition-delay: 150ms; /* 50ms difference with the bar header, to avoid some gaps */
  clip-path: polygon(
    0 0,
    32px 0,
    32px 1px,
    0 32px,
    0 0
  ); 
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  z-index: 1;
              
  /* All nav-descendant flex items won't get squished (scootched) on overflows */
  & * {
    flex-shrink: 0;
    user-select: none; /* Can't highlight anything, non inheritable */
 
    &.inert {
      pointer-events: none; /* No interaction with the pointer */
      touch-action: none; /* Blocks interaction with crude pointers */
    }	
  }
 
  & a,
  & label.dropdown {
    width: 100%;  /* Not by default, not block level elements */
    height: 4rem;
    display: flex;
    justify-content: center;
    align-items: center;
    color: white;
    font-size: 1.25rem;
  }

  & label.dropdown {
    &::after {
      content: '';
      background-color: white;
      display: inline-block; /* To respect transition and size*/
      margin-left: 1rem;
      width: 1.25rem;
      height: 1.25rem;
      clip-path: polygon(
        0 25%,
        15% 25%,
        50% 64.2%, /* Pythagorean theorem */
        85% 25%,
        100% 25%,
        100% 40%,
        50% 80%, 
        0 40%,
        0 25%
      );  
    }
	 
    &+ul { /* The immediate sibling ul only */
      display: none;
    }
  }

  /* Top level entries only */
  &>a,
  &>label.dropdown {
    &>span.destination {
      opacity: 0;
      overflow: hidden;
      transition: opacity 200ms ease-in-out;
      transition-delay: 0s;
    }
  }

  /* 
  Can't target before and after pseudoelements with &>*,
  even though they appear as children 
  */
  &>label.dropdown::after {
    opacity: 0;
    overflow: hidden;
    transition: opacity 200ms ease-in-out;
    transition-delay: 0s;
  }

  /*
  Only the immediate sibling labels of the hidden inputs,
  for the dropdowns, when those are checked
  */
  & input:checked+label.dropdown { 
    &::after {
      transform: rotateX(180deg);
    }

    &+ul { /* Only the immediate sibling ul */ 
      width: 100%; /* Not by default */
      display: flex; 
      flex-direction: column;
      justify-content: flex-start;
      align-items: center;
      background-color: #999;
      list-style: none; 

      &>li {
        width: 100%; /* Not by default */
        flex-shrink: 0;

        &>label.dropdown+ul { /* Submenus of depth 2 */
          background-color: #ccc; 
        }
      }
    }   
  }
}

h1 {
  width: 100%;
  height: auto;
  padding: 64px 16px 16px 16px; 
  text-align: center;
  background-color: rebeccapurple;
  color: white;
  font-size: 1.5rem;
  overflow-wrap: break-word;
  clip-path: polygon(
    0 0,
    64px 48px,
    calc(100% - 64px) 48px,
    100% 0,
    100% 100%,
    0 100%,
   0 0
  );
}
 
/* When the hidden checkbox is checked */
input#navToggler:checked {
  &~div#navHeader {
    transition-delay: 0s; /* For display purposes, have the navbar and the nav header expand uniformly */
    clip-path: polygon(
      0 0,
      100% 0,
      100% 100%,
      calc(100% - 38px) 100%,
      0 100%,
      0 0
    ); 

    &>img.logo {
      &.logoMiddle {
        transition-duration: 200ms;
        transition-delay: 800ms;
        opacity: 0;
      }

      &.logoUpper {
        transition-duration: 200ms;
        transition-delay: 0s;
        opacity: 0;
      }
    }

    &>img.brand {
      transition-delay: 800ms; /* Waiting for bar expansion */
      opacity: 1;      
    }
  }

  &~label[for="navToggler"] {
    transform: translateX(calc(100vw - 110px));
    transition-delay: 100ms; /* Match the navheader delay */

    &>span { /* The ~ selector only works for subsequent siblings */
      background-color: var(--secondary-color);

      /* Trigram to X animation */	    
      &:nth-child(1) {
        transform-origin: top left;
        /* Translation first, translation after rotation is skewed */
        transform: 
          translate(var(--line-height), calc(var(--line-height) / 4)) 
          rotate(45deg); 
      }

      &:nth-child(2) {
        transform-origin: top right;
        transform: 
          translate(calc(var(--line-height) * -1), calc(var(--line-height) / 4))
          rotate(-45deg); 
      }
   
      /* Central blocks move out and become invisible */   
      &:nth-child(3) {
        transform: translateX(-16px);
        opacity: 0;
      }

      &:nth-child(4) {
        transform: translateX(16px);
        opacity: 0;
      }

      &:nth-child(5) {
        transform-origin: bottom left;
        transform: 
          translate(var(--line-height), calc(var(--line-height) / -4)) 
          rotate(-45deg); 
      }

      &:nth-child(6) {
        transform-origin: bottom right;
        transform: 
          translate(calc(var(--line-height) * -1), calc(var(--line-height) / -4)) 
          rotate(45deg); 
      } 
    }
  }

  &~nav#navbar {
    transition-delay: 0s;
    overflow: hidden auto;   
    clip-path: polygon(
      0 0,
      100% 0,
      100% 100%,
      0 100%,
      0 0
    ); 

    /* Immediate link descendants only */
    &>a,
    &>label.dropdown {
      &>span.destination {
        opacity: 1;
        transition-delay: 800ms; /* Waiting for the navbar to fully expand */
      }
    }

    &>label.dropdown::after {
      opacity: 1;
      transition-delay: 800ms; 
    }
  }
}

footer {
  width: 100%;
  height: auto;
  background-color: #96f;
  padding: 16px;
  color: white;
  display: grid;
  grid-template-areas:
    "one"
    "two"
    "logo"
    "three"
    "four";
  grid-template-columns: 1fr;
  column-gap: 1rem;
  row-gap: 2rem;
  justify-items: center;
  align-items: start;
  justify-content: center;
  
  &>div {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    row-gap: 1rem;
  
    &.contact {
      grid-area: one;
    }
  
    &.address {
      grid-area: two;
    }
  
    &.links {
      grid-area: three;
    }
  
    &.social {
      grid-area: four;
    }
  
    & a,
    &>h2 {
      text-align: center;
    }
  
    & a {
      font-size: 1.25rem;
      color: #ccc;
  
      &:hover,
      &:focus,
      &:focus-visible,
      &:active {
        color: white;
      }
    }

    &>address {
      display: flex;
      justify-content: flex-start;
      align-items: center;
    }
  }
  
  &>img {
    display: block;
    width: 6rem;
    height: auto;
    grid-area: logo;
    place-self: center;
  }    
}

/*====MEDIA QUERIES====*/

@media only screen and (min-width: 768px) {
  div#navHeader {
    /*
    --initialWidth: 126px;
    --height: 96px;
    */
     
    width: 448px; 
    height: 96px /* var(--height) */;
    clip-path: polygon(
      0 0,
      96px 0,
      142px 0,
      142px 72px,
      96px 100%,
      0 100%,
      0 0
    ); 
    display: grid;
    grid-template-rows: 16px 1fr;
    grid-template-columns: 16px 64px 16px 1fr;

    &>img.logo {
      width: 64px;
      height: 64px;
    }

    &>img.brand {
      height: 56px;
    }
  }

  label[for="navToggler"] {
    top: 33px;
    left: 96px;
  }

  nav#navbar {
    top: 96px;
    width: 402px;
    height: calc(100vh - 96px);
    height: calc(100svh - 96px); 
  }

  /* When the toggler is checked */
  input#navToggler:checked {
    &~div#navHeader {
      clip-path: polygon(
        0 0,
        calc(100% - 46px) 0,
        100% 33px,
        100% 64px,
        calc(100% - 46px) 100%,
        0 100%,
        0 0
      ); 
    }
 
    &~label[for="navToggler"] {
      transform: translateX(306px);
    }
  }

  footer {
    grid-template-columns: 1fr 1fr;
    grid-template-areas:
      "one two"
      "logo logo"
      "three four";
  }
}

/* Second breakpoint, just for the footer */
@media only screen and (min-width: 1200px) {
  footer {
    grid-template-columns: repeat(5, 1fr);
    grid-template-areas: "one two logo three four";
  }
}

@media only screen and (hover: hover) { /* Apply on devices that support hovering */
  nav#navbar {
    & a,
    & label.dropdown {
      &:hover {
        background-color: rebeccapurple;
      }
    }
  }
}
